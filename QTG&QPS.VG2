"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","No"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:",""
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","0"
"JOINROWS:","0"
"FILTERROWS:","0"
"COL_ID_COUNTER:","39"
"CHART_COUNTER:","8"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{get_customer_lot_list}</@#;>customer_lot_list"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{PrePostQuery_0}</@#;>WIP"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{7399_shipout}</@#;>7399_shipout"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{cut_off_table}</@#;>cut_off_table"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{get_current_ww}</@#;>get_current_ww"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{generate_csv}</@#;>generate_csv"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{html_report}</@#;>html_report"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->SharePoint:Y@EXEDIR@\PublishToSP.va <~>PKR.html,SKR.html<~> <~>https://content.sp2019.intel.com/sites/CD/CDATwebshare/IonReport/IFS_QTG_QPS/<~> <~><~> <~><~>"
"UTILITIESDESC:","Publish to SharePoint"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->SharePoint:Y@EXEDIR@\PublishToSP.va <~>PKR.html<~> <~>https://content.sp2019.intel.com/sites/CD/CDATwebshare/IonReport/IFS_QTG_QPS/IFS_QTG_QPS_report.html<~> <~><~> <~><~>"
"UTILITIESDESC:","Publish to SharePoint"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Delete:Y@EXEDIR@\SPFDelete.bat <~>report.py,current_WW.csv,cutoff.csv,7399_shipout.csv,current_wip.csv,customer_lot_list.csv,Cutoff_Report_Configure.csv,Cutoff_Report_Configure.xlsx,generate_csv.py,customer_lot_list.py<~> <~>N<~>"
"UTILITIESDESC:","Delete Files"
"<---- New Query ---->","-99"
"QUERYGRID:"
"JOINGRID:"
"FILTERGRID:"
/START_EMBED_ALL
/EMBED=VG2;PrePostQuery_0
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","Yes"
"TERMINAL:","No"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","current_wip.csv"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","11"
"JOINROWS:","2"
"FILTERROWS:","4"
"COL_ID_COUNTER:","53"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","1"
"","customer_lot_list.csv a0",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","2:0:a1"
"TABLEGRID:","1"
"","F_Lot_Status_22",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","Oracle"
"SINGLENODE:","Default"
"SINGLESCHEMA:","Default"
"PROMPT-TEXT:","Fetching MARS Data"
"DISTINCT:","Yes"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"FIRST_ROWS:","No"
"ORDERED:","No"
"OTHER-HINT:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.prod","prod","Y","None","None","Row","c","","csv","SQL->a0.[prod]","col49"
"a0.week","week","Y","None","None","Row","c","","csv","SQL->a0.[week]","col50"
"a0.customer_lot","customer_lot","P","None","None","Row","c","","csv","SQL->a0.[customer_lot]","col51"
"a1.prodgroup3","prodgroup3","P","None","None","Row","c","Product Classification column. May be a useful filter in Assembly/Test","f_product","a1->p.prodgroup3","col38"
"a1.operation","operation","Y","None","None","Row","c","The current operation (or processing step) the lot is at","f_lot","a1->f0.operation","col21"
"a1.lot","lot","P","None","None","Row","c","Identifies a batch of wafers or units being processed in the factory. The basic format of the Lot number is:  FYWWNNNN where F=fab code, Y=year, WW=workweek, NNNN= sequence, with the 9th or 10th characters as alphanumeric. In Fab, Etest and Sort, a quantity that has a wafer as an unit of measure and the physical form that passes through the factory. A lot starting the Fab process contains up to 25 wafers and can be split into child lots of varying sizes, and wafer losses can also occur. New lots are also created to split lots due to varying characteristics, such as speed or rework, for a portion of the lot. In some 200mm fabs production lots, the lot number uses a silicon vendor ID in the 8th character","f_lot","a1->f0.lot","col20"
"a1.quantity","quantity","P","None","None","Row","n","The current number of units or wafers or panels in the lot","f_lot","a1->f0.qty1","col23"
"f(a1)->cus_lot_1888","cus_lot_1888","P","None","None","Row","X","***Lot attribute (1888)","f_lot","a1->(SELECT la.attribute_value FROM @MARSSCHEMA@F_LotAttribute la where la.lot= f0.lot AND la.attribute_number = 1888 AND la.src_erase_date IS NULL AND rownum <= 1)","col42"
"f(a1)->cus_lot_1889","cus_lot_1889","P","None","None","Row","X","***Lot attribute (1889)","f_lot","a1->(SELECT la.attribute_value FROM @MARSSCHEMA@F_LotAttribute la where la.lot= f0.lot AND la.attribute_number = 1889 AND la.src_erase_date IS NULL AND rownum <= 1)","col43"
"f(a1)->{cus_lot_1888}  ||  {cus_lot_1889}","cus_lot","P","None","None","Row","C","***","@if@1","a1->{col42}  ||  {col43}","col52"
"f(x)->SUM ( {quantity} ) OVER (PARTITION BY {week} , {prodgroup3} , {operation} )","WIP","Y","None","None","Row","N","***","csv","All->SUM ( {col23} ) OVER (PARTITION BY {col50} , {col38} , {col21} )","col53"
"JOINGRID:"
"","","Sqlite->a0.customer_lot                                                                                                    : SQL->{col51}","=","View->f(a1)->cus_lot                                                                                                    : a1->{col52}",""
"","","Sqlite->a0.prod                                                                                                    : SQL->{col49}","=","View->a1.prodgroup3                                                                                                    : a1->{col38}",""
"FILTERGRID:"
"AND","","a1.terminated","=","'N'","","","c","f_lot","a1->f0.terminated",""
"AND","","a1.quantity",">","0","","","n","f_lot","a1->f0.qty1",""
"AND","","f(a1)->{cus_lot}","In Temp"," {Sqlite (all)} : Sqlite->a0.customer_lot","","","cx","@IF@2","a1->{col52}","SQL->{col51}"
"AND","","a1.prodgroup3","In Temp"," {Sqlite (all)} : Sqlite->a0.prod","","","c","f_product","a1->p.prodgroup3","SQL->{col49}"




















/END_EMBED
/EMBED=VG2;get_customer_lot_list
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","Yes"
"TERMINAL:","No"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","out_21127.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","0"
"JOINROWS:","0"
"FILTERROWS:","0"
"COL_ID_COUNTER:","0"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Copy:Y@EXEDIR@\SPFCopy.bat <~>\\cdATSHFS.intel.com\CDATAnalysis$\MAOATM\zhengwee\7399 ship out_Cutoff_Execution\Cutoff_Report_Configure.xlsx<~> <~>.\<~> <~>N<~>"
"UTILITIESDESC:","Copy Files/Folders"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Excel-To-CSV:Y@EXEDIR@\XLSToCSV.va <~>Cutoff_Report_Configure.xlsx<~> <~>Cutoff_Report_Configure.csv<~> <~>IFS_Prod<~> <~>0<~> <~>0<~> <~>N<~> <~>N<~>"
"UTILITIESDESC:","Convert an Excel File to a CSV File"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Write-File:Ycustomer_lot_list.py<SOF><{><}>import pandas as pd<{><}><{><}>df = pd.read_csv('Cutoff_Report_Configure.csv')<{><}><{><}>df['Week'] = df['Week'].apply(lambda x: x.replace('ww', 'WW'))<{><}><{><}># df = df[(df['Week']=='WW50') | (df['Week']=='WW51')]<{><}><{><}>df.to_csv('customer_lot_list.csv', index=False)"
"UTILITIESDESC:","Write Text to a file. Optionally use <EOF> to mark end of file"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Python:Y@EXEDIR@\Run_Python_Script.va <~>customer_lot_list.py<~> <~><~> <~>N<~> <~><<<SPF-APP-SERVER>>><~> <~>Python-v3<~>"
"UTILITIESDESC:","Run Python script"
"<---- New Query ---->","-99"
"QUERYGRID:"
"JOINGRID:"
"FILTERGRID:"











/END_EMBED
/EMBED=VG2;7399_shipout
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","No"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","7399_shipout.csv"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","12"
"JOINROWS:","2"
"FILTERROWS:","6"
"COL_ID_COUNTER:","15"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","1"
"","customer_lot_list.csv a0",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","2:0:a1"
"TABLEGRID:","1"
"","F_Lot_History_v3",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","Oracle"
"SINGLENODE:","Default"
"SINGLESCHEMA:","Default"
"PROMPT-TEXT:","Fetching MARS Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"FIRST_ROWS:","No"
"ORDERED:","No"
"OTHER-HINT:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.week","week","Y","None","None","Row","c","","csv","SQL->a0.[week]","col4"
"a0.prod","prod","Y","None","None","Row","c","","csv","SQL->a0.[prod]","col1"
"a0.customer_lot","customer_lot","P","None","None","Row","c","","csv","SQL->a0.[customer_lot]","col3"
"a1.lot","lot","P","None","None","Row","c","Identifies a batch of wafers or units being processed in the factory.The basic format of the Lot number is: ?FYWWNNNN where F=fab code, Y=year, WW=workweek, NNNN= sequence, with the 9th or 10th characters as alphanumeric. In Fab, Etest and Sort, a quantity that has a wafer as an unit of measure and the physical form that passes through the factory. A lot starting the Fab process contains up to 25 wafers and can be split into child lots of varying sizes, and wafer losses can also occur. New lots are also created to split lots due to varying characteristics, such as speed or rework, for a portion of the lot. In some 200mm fabs production lots, the lot number uses a silicon vendor ID in the 8th character","f_lothist","a1->f0.lot","col5"
"a1.prodgroup3","prodgroup3","P","None","None","Row","c","Product Classification column.","f_product","a1->p.prodgroup3","col12"
"a1.newqty1","newqty1","P","None","None","Row","n","The number of wafers (or units) in the lot aftrer the last transaction was executed. Ultimately, it will equal the quantity of units in the lot when it is moved out of this operation.","f_lothist","a1->f0.newqty1","col11"
"a1.operation","operation","Y","None","None","Row","c","Identifies a manufacturing process step or a holding point","f_lothist","a1->f0.operation","col6"
"a1.movedout","movedout","P","None","None","Row","c","A flag that indicates if the lot has moved out of the current operation. Y means the lot has moved out. N means the lot is still at the operation.","f_lothist","a1->f0.movedout","col7"
"f(a1)->cus_lot_1888","cus_lot_1888","P","None","None","Row","x","***Lot attribute (1888)","f_lot","a1->(SELECT la.attribute_value FROM @MARSSCHEMA@F_LotAttribute la where la.lot= f9.lot AND la.attribute_number = 1888 AND la.src_erase_date IS NULL AND rownum <= 1)","col8"
"f(a1)->cus_lot_1889","cus_lot_1889","P","None","None","Row","x","***Lot attribute (1889)","f_lot","a1->(SELECT la.attribute_value FROM @MARSSCHEMA@F_LotAttribute la where la.lot= f9.lot AND la.attribute_number = 1889 AND la.src_erase_date IS NULL AND rownum <= 1)","col9"
"f(a1)->{cus_lot_1888}  ||  {cus_lot_1889}","cus_lot","P","None","None","Row","C","***","@if@1","a1->{col8}  ||  {col9}","col10"
"f(x)->SUM (  {newqty1} ) OVER (PARTITION BY   {week} , {prodgroup3} ,   {operation} )","shipout_qty","Y","None","None","Row","C","***","csv","All->SUM (  {col11} ) OVER (PARTITION BY   {col4} , {col12} ,   {col6} )","col14"
"JOINGRID:"
"AND","","Sqlite->a0.customer_lot                                                                                                    : SQL->{col3}","=","View->f(a1)->cus_lot                                                                                                    : a1->{col10}",""
"AND","","Sqlite->a0.prod                                                                                                    : SQL->{col1}","=","View->a1.prodgroup3                                                                                                    : a1->{col12}",""
"FILTERGRID:"
"AND","","a1.out_date","Is Not Null","","",".","d","f_lothist","a1->f0.out_date",""
"AND","","a1.movedout","=","'Y'","","","c","f_lothist","a1->f0.movedout",""
"AND","","a1.newqty1",">","0","","","n","f_lothist","a1->f0.newqty1",""
"AND","","a1.operation","=","'7399'","","","c","f_lothist","a1->f0.operation",""
"AND","","f(a1)->{cus_lot}","In Temp"," {Sqlite (all)} : Sqlite->a0.customer_lot","","","cx","@IF@2","a1->{col10}","SQL->{col3}"
"AND","","a1.prodgroup3","In Temp"," {Sqlite (all)} : Sqlite->a0.prod","","","c","f_product","a1->p.prodgroup3","SQL->{col1}"




















/END_EMBED
/EMBED=VG2;cut_off_table
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","No"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","cutoff.csv"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","7"
"JOINROWS:","2"
"FILTERROWS:","6"
"COL_ID_COUNTER:","20"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","1"
"","customer_lot_list.csv a1",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","2:9:a0"
"TABLEGRID:","1"
"","Antares_Area_Section_Operation",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","CD.Antares"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLServer"
"SINGLENODE:","CD.Antares"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Other Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"<---- New Query ---->","2:0:a2"
"TABLEGRID:","1"
"","F_OperationCode",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","CD.Antares"
"MARSSCHEMA:","Default"
"DATABASETYPE:","Oracle"
"SINGLENODE:","Default"
"SINGLESCHEMA:","Default"
"PROMPT-TEXT:","Fetching MARS Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"FIRST_ROWS:","No"
"ORDERED:","No"
"OTHER-HINT:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a1.prod","prod","Y","None","None","Row","c","","csv","SQL->a1.[prod]","col13"
"a0.area","area","Y","None","None","Row","c","Area name within Area Type","qps","a0->Qps.Area","col2"
"a0.operation_seq","operation_seq","Y","Asc","None","Row","f","Operation sequence number.","qps","a0->Qps.Operation_Seq","col14"
"a0.operation","operation","Y","None","None","Row","c","Operation. Eg: 0010","qps","a0->Qps.Operation","col5"
"a2.oper_short_desc","oper_short_desc","Y","None","None","Row","c","Identifies a short description for the operation","f_operation","a2->o.oper_short_desc","col20"
"a0.stg1","stg1","Y","None","None","Row","f","","qps","a0->Qps.STG1","col9"
"a2.operation","operation_1","P","None","None","Row","c","Identifies a manufacturing process step or a holding point","f_opercode","a2->oc.operation","col19"
"JOINGRID:"
"","","Sqlite->a1.prod                                                                                                    : SQL->{col13}","=","View->a0.area                                                                                                    : a0->{col2}",""
"","","View->a0.operation                                                                                                    : a0->{col5}","=","View->a2.operation                                                                                                    : a2->{col19}",""
"FILTERGRID:"
"AND","","a0.area","In Temp"," {Sqlite (all)} : Sqlite->a1.prod","",".","c","qps","a0->Qps.Area","SQL->{col13}"
"AND","","a0.area_section_type","=","'PG'","",".","c","qps","a0->Qps.Area_Section_Type",""
"AND","","a0.area_type","=","'L1 Goaling '","",".","c","qps","a0->Qps.Area_Type",""
"AND","","a0.area","In Temp"," {Sqlite (all)} : Sqlite->a1.prod","",".","c","qps","a0->Qps.Area","SQL->{col13}"
"AND","","a2.src_erase_date","Is Null","","","","d","f_opercode","a2->oc.src_erase_date",""
"AND","","a2.operation","In Temp"," {View (a0)} : View->a0.operation","",".","c","f_opercode","a2->oc.operation","a0->{col5}"















/END_EMBED
/EMBED=VG2;generate_csv
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","No"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","out_24374.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","0"
"JOINROWS:","0"
"FILTERROWS:","0"
"COL_ID_COUNTER:","0"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Write-File:Ygenerate_csv.py<SOF><{><}>import pandas as pd<{><}><{><}><{><}>df_cuslot = pd.read_csv('customer_lot_list.csv')<{><}>df_wip = pd.read_csv('current_wip.csv', dtype={'operation': 'Int64'})<{><}>df_shipout = pd.read_csv('7399_shipout.csv', dtype={'operation': 'Int64'})<{><}>df_cutoff = pd.read_csv('cutoff.csv', dtype={'operation': 'Int64'})<{><}>df_ww = pd.read_csv('current_WW.csv')<{><}><{><}><{><}>def generate_qtg_table(product):<{><}><{><}>    current_ww = 'WW' + str(df_ww['WW'].values[0])[-2:]<{><}>    ww_lst = sorted(list(set(df_wip[df_wip['prod'] == product]['week'])))<{><}>    # ww_lst.remove(<~>WW53<~>)<{><}>    latest_ww =  ww_lst[-1]<{><}>    <{><}>    # latest_ww = sorted(list(set(df_wip[df_wip['prod'] == product]['week'])))[-1]<{><}>    <{><}><{><}>    QTGs = int(latest_ww[-2:]) - int(current_ww [-2:]) + 1  # check how many QTGs we have<{><}><{><}>    if QTGs == 1:<{><}>        cols = ['WW', 'Prod', 'Operation', 'Oper Short Desc'] + ['QTG1', 'QPS1', 'STG1']<{><}>    elif QTGs == 2:<{><}>        cols = ['WW', 'Prod', 'Operation', 'Oper Short Desc'] + ['QTG1', 'QPS1', 'STG1'] + ['QTG2', 'QPS2', 'STG2']<{><}>    elif QTGs == 3:<{><}>        cols = ['WW', 'Prod', 'Operation', 'Oper Short Desc'] + ['QTG1','QPS1', 'STG1'] + ['QTG2', 'QPS2', 'STG2'] + ['QTG3', 'QPS3', 'STG3']<{><}>    elif QTGs == 4:<{><}>        cols = ['WW', 'Prod', 'Operation', 'Oper Short Desc'] + ['QTG1', 'QPS1', 'STG1'] + ['QTG2', 'QPS2', 'STG2'] + ['QTG3', 'QPS3', 'STG3'] + ['QTG4', 'QPS4', 'STG4']<{><}>    <{><}>    <{><}>    qtg_template = pd.DataFrame(columns=cols)<{><}>    qtg_template.loc[:, 'Operation'] = df_cutoff[df_cutoff['prod']== product]['operation']<{><}>    qtg_template.loc[:, 'Oper Short Desc'] = df_cutoff[df_cutoff['prod']== product]['oper_short_desc']<{><}>    qtg_template.loc[:, 'WW'] = current_ww<{><}>    qtg_template.loc[:, 'Prod'] = df_cutoff[df_cutoff['prod']== product]['prod']<{><}>    qtg_template.loc[:, 'STG1'] = df_cutoff[df_cutoff['prod']== product]['stg1']<{><}>    if QTGs > 1:<{><}>        for i in range(2, QTGs+1):<{><}>            qtg_template.loc[:, 'STG' + str(i)] = qtg_template['STG' + str(i-1)].apply(lambda x: x+14)<{><}>            <{><}>    <{><}>    return qtg_template, QTGs<{><}><{><}>def fill_in_qtg_table(qtg_table):<{><}><{><}>    current, prod = next(iter(qtg_table['WW'])), next(iter(qtg_table['Prod']))<{><}><{><}>    for i in range(1, QTGs+1):<{><}><{><}>        if len(str(int(current[-2:])+i-1)) == 1:<{><}>            ww = 'WW0' + str(int(current[-2:])+i-1)<{><}>        else:<{><}>            ww = 'WW' + str(int(current[-2:])+i-1)<{><}><{><}>        for idx, row in qtg_table.iterrows():<{><}>            oper = row['Operation']<{><}>            shipout = df_shipout[(df_shipout['week'] == ww) & (<{><}>                df_shipout['prod'] == prod)]['shipout_qty'].sum()<{><}>            target = df_wip[(df_wip['week'] == ww) & (<{><}>                df_wip['prod'] == prod)]['WIP'].sum() - shipout<{><}>            downstream_oper = qtg_table.loc[idx + 1:, 'Operation'].to_list()<{><}>            downstream_wip = df_wip[(df_wip['prod'] == prod) & (df_wip['week'] == ww) & (df_wip['operation'].isin(downstream_oper))]['WIP'].sum()<{><}>            qtg_table.loc[idx, 'QTG'+str(i)] = target - downstream_wip<{><}>            if (qtg_table.loc[idx, 'QTG'+str(i)] < 0) & (qtg_table.loc[idx, 'STG'+str(i)] < 0):<{><}>                qtg_table.loc[idx, 'QPS'+str(i)] = - (<{><}>                    qtg_table.loc[idx, 'QTG'+str(i)] / qtg_table.loc[idx, 'STG'+str(i)])<{><}>            elif (qtg_table.loc[idx, 'QTG'+str(i)] > 0) & (qtg_table.loc[idx, 'STG'+str(i)] < 0):<{><}>                qtg_table.loc[idx, 'QPS'+str(i)] = - (qtg_table.loc[idx, 'QTG'+str(i)] / qtg_table.loc[idx, 'STG'+str(i)])<{><}>            else:<{><}>                qtg_table.loc[idx, 'QPS'+str(i)] = qtg_table.loc[idx, 'QTG'+str(i)] / qtg_table.loc[idx, 'STG'+str(i)]<{><}><{><}>    for idx, row in qtg_table.iterrows():<{><}>        ww, prod = next(iter(qtg_table['WW'])), next(iter(qtg_table['Prod']))<{><}>        oper = row['Operation']<{><}>        qtg_table.loc[idx, 'WIP'] = df_wip[(df_wip['prod'] == prod) & (df_wip['operation'] == oper)]['WIP'].sum()<{><}><{><}>    return qtg_table<{><}><{><}>current_ww = 'WW' + str(df_ww['WW'].values[0])[-2:] <{><}>for p in set(df_cuslot[df_cuslot['Week']>=current_ww]['PROD'].to_list()):<{><}>    qtg_template, QTGs = generate_qtg_table(p)<{><}>    df_qtg  = fill_in_qtg_table(qtg_template)<{><}>    df_qtg.to_csv(f'{p}.csv', index=False)"
"UTILITIESDESC:","Write Text to a file. Optionally use <EOF> to mark end of file"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Python:Y@EXEDIR@\Run_Python_Script.va <~>generate_csv.py<~> <~><~> <~>N<~> <~><<<SPF-APP-SERVER>>><~> <~>Python-v3<~>"
"UTILITIESDESC:","Run Python script"
"<---- New Query ---->","-99"
"QUERYGRID:"
"JOINGRID:"
"FILTERGRID:"

/END_EMBED
/EMBED=VG2;html_report
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","No"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","out_24374.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","0"
"JOINROWS:","0"
"FILTERROWS:","0"
"COL_ID_COUNTER:","0"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Write-File:Yreport.py<SOF><{><}>import pandas as pd<{><}>from datetime import datetime<{><}><{><}>df_cuslot = pd.read_csv('customer_lot_list.csv')<{><}>df_ww = pd.read_csv('current_WW.csv')<{><}>current_ww = 'WW' + str(df_ww['WW'].values[0])[-2:] <{><}><{><}>now = datetime.now()<{><}>date_time = now.strftime(<~>%m/%d/%Y %H:%M:%S<~>)<{><}><{><}>navigator = ''<{><}>for p in sorted(set(df_cuslot[df_cuslot['Week']>=current_ww]['PROD'])):<{><}>    navigator += f'<li><a href=<~>{p}.html<~>>{p}</a></li>'<{><}><{><}>def table_html(product):<{><}>    table = pd.read_csv(f'{product}.csv')<{><}>    table = table.fillna('')<{><}>    table = table[table.columns[2:]]<{><}>    table = table.round(1)<{><}>    qtgs = [col for col in table.columns if 'QTG' in col]<{><}>    table[qtgs] = table[qtgs].astype(int)<{><}>    for q in qtgs:<{><}>        table[q] = table[q].map(lambda x: f'{x:,}')<{><}>    qpss = [col for col in table.columns if 'QPS' in col]<{><}>    # table[qpss] = table[qpss].astype(int)<{><}>    #for q in qpss:<{><}>    #    table[q] = table[q].map(lambda x: f'{x:,}')<{><}>    table['WIP'] = table['WIP'].astype(int)<{><}>    table['WIP'] = table['WIP'].map(lambda x: f'{x:,}')<{><}>    table = table.fillna('')<{><}>    table = table.to_html(index=False)<{><}><{><}>    <{><}>    f = open(f'{product}.html', 'w', encoding=<~>utf-8<~>)<{><}><{><}>    html_text = f<~><~><~><{><}>    <{><}>    <!DOCTYPE html><{><}>    <{><}>    <html><{><}>    <head><{><}>    <meta charset=<~>utf-8<~>><{><}>    <title>QTG&QPS Report for IFS Products</title><{><}>    <link rel=<~>stylesheet<~> href=<~>styles.css<~>><{><}>    </head><{><}><{><}>    <h1 style=<~>text-align:center; color:#00285A<~>>QTG&QPS Report for IFS Products</h1><{><}><{><}>    <div align=<~>center<~> style=<~>color:black; font-size:1.2vw<~> >Last update: {date_time}</div><{><}>    <{><}><{><}>    <body><{><}><{><}>    <ul><{><}>      {navigator}<{><}>    </ul><{><}>    <br><{><}><{><}>    {table}<{><}><{><}>    </body><{><}>    </html><{><}>    <{><}>    <~><~><~><{><}><{><}>    html_text = html_text.replace(f'<li><a href=<~>{product}.html<~>>', f'<li><a class=<~>active<~> href=<~>{product}.html<~>>')<{><}>    # html_text = html_text.replace('<table border=<~>1<~> class=<~>dataframe<~>>', '<table id=<~>filter<~> class=<~>table<~>>')<{><}>    <{><}>    # <input type=<~>text<~> id=<~>filter0<~> placeholder=<~>Filter Oper Code<~> /><{><}>    # <input type=<~>text<~> id=<~>filter1<~> placeholder=<~>Filter Oper Desc<~> /><{><}>    # <script src=<~>TableFilter.min.js<~> defer></script><{><}>    f.write(html_text)<{><}>    f.close()<{><}><{><}>for p in set(df_cuslot[df_cuslot['Week']>=current_ww]['PROD'].to_list()):<{><}>    table_html(p)"
"UTILITIESDESC:","Write Text to a file. Optionally use <EOF> to mark end of file"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Python:Y@EXEDIR@\Run_Python_Script.va <~>report.py<~> <~><~> <~>N<~> <~><<<SPF-APP-SERVER>>><~> <~>Python-v3<~>"
"UTILITIESDESC:","Run Python script"
"<---- New Query ---->","-99"
"QUERYGRID:"
"JOINGRID:"
"FILTERGRID:"


/END_EMBED
/EMBED=VG2;get_current_ww
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","No"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","current_WW.csv"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","5"
"JOINROWS:","0"
"FILTERROWS:","2"
"COL_ID_COUNTER:","5"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","2:0:a0"
"TABLEGRID:","1"
"","Calendar_Data",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","Default"
"MARSSCHEMA:","Default"
"DATABASETYPE:","Oracle"
"SINGLENODE:","Default"
"SINGLESCHEMA:","Default"
"PROMPT-TEXT:","Fetching MARS Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"FIRST_ROWS:","No"
"ORDERED:","No"
"OTHER-HINT:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.ww","ww","Y","None","None","Row","n","The facility work week for the given interval in the format yyyyww.  For example: 199745","f_calendar","a0->c0.ww","col1"
"a0.ww_start_date","ww_start_date","Y","None","None","Row","d","Start date of WW","f_calendar","a0->(SELECT min(c000.start_date) FROM @MARSSCHEMA@F_Calendar c000 where c000.ww=c0.ww)","col2"
"a0.ww_end_date","ww_end_date","Y","None","None","Row","d","End date of WW","f_calendar","a0->(SELECT max(c000.end_date) FROM @MARSSCHEMA@F_Calendar c000 where c000.ww=c0.ww)","col3"
"a0.start_date","start_date","Y","None","None","Row","d","A calendar date/time for the start of this interval.","f_calendar","a0->c0.start_date","col4"
"a0.end_date","end_date","Y","None","None","Row","d","A calendar date/time for the end of this interval.","f_calendar","a0->c0.end_date","col5"
"JOINGRID:"
"FILTERGRID:"
"AND","","a0.start_date","<=","SYSDATE","",".","d","f_calendar","a0->c0.start_date",""
"AND","","a0.end_date",">=","SYSDATE","","","d","f_calendar","a0->c0.end_date",""


















/END_EMBED
/END_EMBED_ALL
